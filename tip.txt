@Column(updatable = false)
ㄴ값이 바뀌어도 변경감지 안함. 테스트할때 불편해서 껐음

@RequestBody: 기본생성자, getter 사용

@ModelAttribute: @Setter or @AllArgCons
ㄴ@GetMapping에 주로 사용. POST, PUT, DELETE는 @RequestBody 사용

row 개수가 적다면? → findAllByMemberId + Stream
row 개수가 많다면? → existsBy로 바로 DB에서 검사

오버로드 생성자는 네이밍 불명확
->정적 팩토리 메서드 사용
->정적 팩토리 메서드는 setter 필요
->setter는 유지 보수 감소
->정적 메서드 안에서 private 생성자 사용
단, 양방향 연관관계 일때 억지로 푸는 것 보다 setter를 사용하는 게 편함
https://www.inflearn.com/community/questions/16235/%EC%83%9D%EC%84%B1-%EB%A9%94%EC%84%9C%EB%93%9C-setter-%EC%A7%88%EB%AC%B8?srsltid=AfmBOor1YhiRGTb_RZTHJrufY3IVYMo_zxKiBYZNVIAnqLwA_3zYSIiH

영속성 컨텍스트 1차 캐시 재사용은 findById만 가능
https://limyohwan.tistory.com/62

@PreAuthorize: AOP가 먼저 실행되도록 보장하지 않음. AOP가 먼저 실행되도록 하려면 @Secured 사용

